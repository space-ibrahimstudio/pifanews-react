name: PIFA v0.1.0

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 */2 * *"

jobs:
  web-deploy:
    name: Deploy on Main
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.1]

    steps:
      - name: 1. Get latest code
        uses: actions/checkout@v2

      - name: 2. Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: 3. Export environment variables
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_DOMAIN_MAIN=${{ secrets.REACT_APP_DOMAIN_MAIN }}" >> $GITHUB_ENV
          echo "REACT_APP_MARKERS=${{ secrets.REACT_APP_MARKERS }}" >> $GITHUB_ENV
          echo "REACT_APP_GTAG_MAIN=${{ secrets.REACT_APP_GTAG_MAIN }}" >> $GITHUB_ENV

      - name: 4. Installing required packages
        run: npm install

      - name: 5. Generate latest sitemap
        run: node update-slugs.js
        env:
          REACT_APP_DOMAIN_MAIN: ${{ secrets.REACT_APP_DOMAIN_MAIN }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: 6. Builds the app for production
        run: CI= npm run stagen

      - name: 7. List output files
        run: find build/ -print

      - name: 8. Sync files (excluding berita folder)
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME_MAIN }}
          password: ${{ secrets.FTP_PASSWORD_MAIN }}
          local-dir: build/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/berita/**
            **/img/**
            **/png/**
            **/svg/**

      - name: 9. Remove "berita" folder recursively
        run: |
          echo "open ${{ secrets.FTP_HOST }}" >> ftp_commands_clean.txt
          echo "user ${{ secrets.FTP_USERNAME_MAIN }} ${{ secrets.FTP_PASSWORD_MAIN }}" >> ftp_commands_clean.txt

          echo "function delete_dir() {" >> ftp_commands_clean.txt
          echo "  local DIR=$1" >> ftp_commands_clean.txt
          echo "  echo cd \$DIR" >> ftp_commands_clean.txt
          echo "  mls" >> ftp_commands_clean.txt
          echo "  for FILE in *; do" >> ftp_commands_clean.txt
          echo "    if [[ -f \$FILE ]]; then" >> ftp_commands_clean.txt
          echo "      echo delete \$FILE" >> ftp_commands_clean.txt
          echo "    elif [[ -d \$FILE ]]; then" >> ftp_commands_clean.txt
          echo "      delete_dir \$DIR/\$FILE" >> ftp_commands_clean.txt
          echo "      echo rmdir \$DIR/\$FILE" >> ftp_commands_clean.txt
          echo "    fi" >> ftp_commands_clean.txt
          echo "  done" >> ftp_commands_clean.txt
          echo "}" >> ftp_commands_clean.txt

          echo "delete_dir /berita" >> ftp_commands_clean.txt
          echo "bye" >> ftp_commands_clean.txt

          ftp -inv < ftp_commands_clean.txt

      - name: 10. Sync "berita" folder
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME_MAIN }}
          password: ${{ secrets.FTP_PASSWORD_MAIN }}
          local-dir: build/berita/
          server-dir: berita/

      - name: 11. Remove FTP sync state file
        run: |
          echo "open ${{ secrets.FTP_HOST }}" >> ftp_commands_async.txt
          echo "user ${{ secrets.FTP_USERNAME_MAIN }} ${{ secrets.FTP_PASSWORD_MAIN }}" >> ftp_commands_async.txt

          echo "cd /berita" >> ftp_commands_async.txt
          echo "delete .ftp-deploy-sync-state.json" >> ftp_commands_async.txt
          echo "bye" >> ftp_commands_async.txt

          ftp -inv < ftp_commands_async.txt
