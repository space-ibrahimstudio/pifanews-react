name: PIFA AREA v0.1.0 (hook)

on:
  repository_dispatch:
    types: [pifa-render-static]

jobs:
  web-deploy:
    name: Render Static Site
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.1]

    steps:
      - name: 1. Get latest code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.branch || 'main' }}

      - name: 2. Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: 3. Export environment variables
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_MARKERS=${{ secrets.REACT_APP_MARKERS }}" >> $GITHUB_ENV
          echo "REACT_APP_GTAG_MAIN=${{ secrets.REACT_APP_GTAG_MAIN }}" >> $GITHUB_ENV
          echo "REACT_APP_CA_PUB_MAIN=${{ secrets.REACT_APP_CA_PUB_MAIN }}" >> $GITHUB_ENV

      - name: 4. Fetch Subdomains from API
        run: |
          curl -s https://api.pifa.co.id/main/categoryarea > subdomains.json

      - name: 5. Installing required packages
        run: npm install

      - name: 6. Parse Subdomains Data, then Deploy
        run: |
          set -e
          SUBDOMAINS=$(jq -c '.data[]' subdomains.json)

          for SUBDOMAIN in $SUBDOMAINS; do
            SUB=$(echo $SUBDOMAIN | jq -r '.subdomain')
            NAME=$(echo $SUBDOMAIN | jq -r '.nama_kategori_daerah')
            ID=$(echo $SUBDOMAIN | jq -r '.id')
            
            echo "Deploying for: $NAME (ID: $ID)"

            FTP_USER=$(eval echo "\${{ secrets.FTP_USERNAME_${SUB^^} }}")
            FTP_PASS=$(eval echo "\${{ secrets.FTP_PASSWORD_${SUB^^} }}")
            FTP_HOST=$(eval echo "\${{ secrets.FTP_HOST }}")

            if [[ -z "$FTP_USER" || -z "$FTP_PASS" || -z "$FTP_HOST" ]]; then
              echo "Missing FTP credentials for $NAME. Skipping..."
              continue
            fi

            echo "REACT_APP_DOMAIN_AREA=$SUB" >> $GITHUB_ENV
            echo "REACT_APP_DOMAIN_AREA_NAME=$NAME" >> $GITHUB_ENV
            echo "REACT_APP_DOMAIN_AREA_ID=$ID" >> $GITHUB_ENV

            env REACT_APP_DOMAIN_AREA=$SUB \
                REACT_APP_DOMAIN_AREA_ID=$ID \
                REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} \
                node update-slugs.js

            sudo lsof -i tcp:45678 | grep LISTEN | awk '{print $2}' | xargs sudo kill -9 || true

            CI= npm run spagen

            lftp -e "
              open $FTP_HOST;
              user $FTP_USER $FTP_PASS;
              mirror -R build/ /;
              bye
            "
          done

      - name: 12. Commit and push updated sitemap.xml
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet public/sitemap.xml; then
            echo "No changes detected in sitemap.xml. Skipping commit."
          else
            git add public/sitemap.xml
            git commit -m "Update sitemap.xml from GitHub Actions"
            git push origin area
          fi
